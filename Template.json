{
  "Name": "ActiveDirectory",
  "Description": "Creates an Active Directory deployment.",
  "Version": "0.1.0",
  "Parameters": [
    {
      "Name": "VnetName",
      "Type": "String",
      "Description": "Name of Virtual Network",
      "Default": "vnet"
    },
    {
      "Name": "Region",
      "Type": "String",
      "TypeHint": "AzureRegionName",
      "Description": "Name of Azure region."
    },
    {
      "Name": "AffinityGroup",
      "Type": "String",
      "TypeHint": "AzureAffinityGroupName",
      "Description": "Name of Azure affinity group."
    },
    {
      "Name": "CloudService",
      "Type": "String",
      "TypeHint": "AzureCloudServiceName",
      "Description": "Name of the Azure Cloud Service."
    },
    {
      "Name": "DiskStore",
      "Type": "String",
      "TypeHint": "AzureStorageName",
      "Description": "Name of Azure disk storage account."
    },
    {
      "Name": "VMSize",
      "Type": "String",
      "TypeHint": "AzureRoleSize",
      "Description": "Size of the server VMs.",
      "Default": "Small"
    },
    {
      "Name": "AdminName",
      "Type": "String",
      "TypeHint": "username",
      "Description": "Name of local administrator account.",
      "Minimum": 1.0,
      "Maximum": 64.0
    },
    {
      "Name": "AdminPassword",
      "Type": "String",
      "TypeHint": "password",
      "Description": "Password of local administrator account.",
      "MaskValue": true,
      "Minimum": 8.0,
      "Maximum": 127.0
    },
    {
      "Name": "DSRMPassPhrase",
      "Type": "String",
      "TypeHint": "password",
      "Description": "Safemode Password for domain",
      "MaskValue": true,
      "Minimum": 8.0,
      "Maximum": 127.0
    },
    {
      "Name": "Domain",
      "Type": "String",
      "TypeHint": "domain",
      "Description": "NetBios domain name.",
      "Minimum": 1.0,
      "Maximum": 64.0
    },
    {
      "Name": "FQDN",
      "Type": "String",
      "TypeHint": "domain",
      "Description": "Fully qualified domain name",
      "Minimum": 1.0,
      "Maximum": 64.0
    },
    {
      "Name": "ServerNamePrefix",
      "Type": "String",
      "Description": "Name prefix for servers.",
      "Default": "dc",
      "AllowedRegex": "^[a-zA-Z][a-zA-Z0-9-]{1,13}$",
      "AllowedDescription": "Must contain 3 to 14 letters, numbers, and hyphens. Must start with a letter."
    },
    {
      "Name": "AVSet",
      "Type": "String",
      "Default": "ad-avset",
      "Description": "Availability Group name."
    }
  ],
  "Network": {
    "DnsServers": [
      {
        "Name": "ad-dns1",
        "IPAddress": "10.0.0.4"
      }
    ],
    "LocalSites": [],
    "VirtualSites": [
      {
        "Name": "{{VnetName}}",
        "AffinityGroup": "{{AffinityGroup}}",
        "AddressSpace": [
          "10.0.0.0/8"
        ],
        "Subnets": [
          {
            "Name": "ad-subnet",
            "AddressPrefix": "10.0.0.0/24"
          }
        ],
        "DnsServers": [
          "ad-dns1"
        ],
        "VPNClientAddressSpaces": []
      }
    ]
  },
  "AffinityGroup": {
    "Name": "{{AffinityGroup}}",
    "Region": "{{Region}}",
    "Label": "{{AffinityGroup}}"
  },
  "StorageAccounts": [
    {
      "Name": "{{DiskStore}}",
      "AffinityGroup": "{{AffinityGroup}}",
      "Description": "A non-georedundant disk store",
      "DisableGeoReplication": true
    }
  ],
  "CloudServices": [
    {
      "Name": "{{CloudService}}",
      "AffinityGroup": "{{AffinityGroup}}",
      "Description": "My AD Service",
      "Deployment": {
        "Name": "03d081ab-b806-45ff-ae8d-3fbce755a6d5",
        "VirtualNetwork": "{{VnetName}}",
        "VirtualMachines": [
          {
            "Name": "{{ServerNamePrefix}}1",
            "RoleSize": "{{VMSize}}",
            "StaticVNetIPAddress": "10.0.0.4",
            "Subnets": [
              "ad-subnet"
            ],
            "AvailabilitySet": "{{AVSet}}",
            "OsVirtualDisk": {
              "OsType": "Windows",
              "OsImageName": "a699494373c04fc0bc8f2bb1389d6106__Windows-Server-2012-R2-*"
            },
            "DataVirtualDisks": [
              {
                "DiskId": "disk0",
                "Lun": 0,
                "LogicalSizeInGB": 40
              }
            ],
            "WindowsConfigSet": {
              "LocalAdminCredentialId": "DomainAdmin",
              "EnableAutomaticUpdates": false,
              "ChangePasswordAtLogon": false,
              "DisableRdp": false
            },
            "ConfigSets": [
              "RootDomainController"
            ],
            "DeploymentGroup": "Forest"
          }
        ],
        "DnsServers": [
          {
            "Name": "DCLoopback",
            "IPAddress": "127.0.0.1"
          }
        ],
        "DiskStorageAccount": "{{DiskStore}}"
      }
    }
  ],
  "DeploymentGroups": [
  {
      "Name": "Forest",
      "Description": "Must fully deploy forest root before any other DCs"
  }
  ],
  "Credentials": [
    {
      "Name": "DomainAdmin",
      "UserName": "{{Domain}}\\{{AdminName}}",
      "Password": "{{AdminPassword}}"
    },
    {
      "Name": "DomainAdmin:local",
      "UserName": "{{AdminName}}",
      "Password": "{{AdminPassword}}"
    },
    {
      "Name": "DomainJoinCred",
      "UserName": "{{Domain}}\\{{AdminName}}",
      "Password": "{{AdminPassword}}"
    }
  ],
  "ConfigSets": [
    {
      "Name": "RootDomainController",
      "Description": "Active Directory root DC",
      "Endpoints": [],
      "ConfigurationIds": [
        "SetupADNode",
        "SetupADForest",
        "SetupADCS"
      ]
    }
  ],
  "Configurations": [
    {
      "Name": "SetupADNode",
      "Description": "Install AD Domain Services, Group Policy Management Console, and DNS.",
      "Resources": [
        {
          "Credential": null,
          "GetScript": "@{ Disks = Get-Disk; Partitions = Get-Disk | Get-Partition; }",
          "SetScript": "\r\nFunction Format-RawDisks\r\n{\r\n    [cmdletbinding()]\r\n    param([char]$nextDriveLetter)\r\n\r\n\tforeach ($disk in Get-Disk | Where PartitionStyle -eq 'RAW')\r\n\t{\r\n\t\tWrite-Verbose \"Formatting disk [$nextDriveLetter]\"\r\n\t\t$disk | Initialize-Disk -PartitionStyle MBR -PassThru |\r\n\t\t\t\tNew-Partition -DriveLetter $nextDriveLetter -UseMaximumSize |\r\n\t\t\t\tFormat-Volume -FileSystem NTFS -Confirm:$false\r\n\r\n\t\t$nextDriveLetter = [char]([int]$nextDriveLetter + 1)\r\n\t}\r\n}\r\nFormat-RawDisks $FirstDriveLetter[0] -ErrorAction Stop",
          "TestScript": null,
          "Type": "Script",
          "ImportModule": null,
          "ImportTypeName": null,
          "Name": "FormatRawDisks",
          "Args": {
            "FirstDriveLetter": "F"
          },
          "Nodes": [],
          "Requires": [],
          "Description": null
        },
        {
          "Type": "WindowsFeature",
          "ImportModule": null,
          "ImportTypeName": null,
          "Name": "ADDomainServices",
          "Args": {
            "Name": "AD-Domain-Services",
            "Ensure": "Present",
            "IncludeAllSubFeature": "true",
            "LogPath": "%BrewmasterDir%\\Logs\\Install-ADDomainServices.log"
          },
          "Nodes": [],
          "Requires": [],
          "Description": null
        },
        {
          "Type": "WindowsFeature",
          "ImportModule": null,
          "ImportTypeName": null,
          "Name": "GroupPolicyManagementConsole",
          "Args": {
            "Name": "GPMC",
            "Ensure": "Present",
            "IncludeAllSubFeature": "true",
            "LogPath": "%BrewmasterDir%\\Logs\\Install-GPMC.log"
          },
          "Nodes": [],
          "Requires": [],
          "Description": null
        }
      ],
      "Args": {}
    },
    {
      "Name": "SetupADForest",
      "Description": "Configure this server as the first Active Directory domain controller in a new forest. See http://technet.microsoft.com/en-us/library/jj574166.aspx",
      "Resources": [
         {
          "Credential": null,
          "GetScript": "return @{Domain = Get-WmiObject Win32_NTDomain}",
          "SetScript": "\r\nWrite-Verbose \"Creating forest [$DomainNetbiosName ($DomainName)]\"\r\nImport-Module ADDSDeployment -Verbose:$false\r\nInstall-ADDSForest -DomainName $DomainName `\r\n                   -DomainNetbiosName $DomainNetbiosName `\r\n                   -ForestMode 'Win2012' `\r\n                   -DomainMode 'Win2012' `\r\n                   -SafeModeAdministratorPassword (ConvertTo-SecureString $DSRMPassPhrase -AsPlainText -Force) `\r\n                   -InstallDns `\r\n                   -DatabasePath $DatabasePath `\r\n                   -LogPath $LogPath `\r\n                   -SysvolPath $SysvolPath `\r\n                   -Force `\r\n                   -NoRebootOnCompletion `\r\n                   -ErrorAction Stop `\r\n                   -WarningAction SilentlyContinue\r\nWrite-Verbose 'Rebooting'\r\n$global:DSCMachineStatus = 1",
          "TestScript": "\r\n$d = Get-WmiObject Win32_NTDomain\r\nif ($d.Status -eq 'OK' -AND \r\n    $d.DnsForestName -eq $DomainName -AND \r\n    $d.DomainName -eq $DomainNetbiosName -AND \r\n    $d.DomainControllerName -eq \"\\\\$env:COMPUTERNAME\")\r\n{\r\n\tWrite-Verbose \"Domain [$DomainNetbiosName ($DomainName)] already configured.\"\r\n\treturn $true\r\n}\r\nreturn $false",
          "Type": "Script",
          "ImportModule": null,
          "ImportTypeName": null,
          "Name": "SetupForest",
          "Args": {
            "DomainNetbiosName": "{{Domain}}",
            "DomainName": "{{FQDN}}",
            "DSRMPassPhrase": "{{DSRMPassPhrase}}",
            "DatabasePath": "F:\\NTDS",
            "LogPath": "F:\\NTDS",
            "SysvolPath": "F:\\SYSVOL"
          },
          "Nodes": [],
          "Requires": [],
          "Description": null
        },
        {
          "Type": "Service",
          "ImportModule": null,
          "ImportTypeName": null,
          "Name": "StartADWebServices",
          "Args": {
            "Name": "ADWS",
            "StartupType": "Automatic",
            "State": "Running"
          },
          "Nodes": [],
          "Requires": [
            "[Script]SetupForest"
          ],
          "Description": null
        }
      ],
      "Args": {}
    },
    {
      "Name": "SetupADCS",
      "Description": "Configure this server as the first Active Directory certificate services. See https://technet.microsoft.com/en-in/windowsserver/dd448615.aspx",
      "Resources": [        
        {
          "Type": "WindowsFeature",
          "ImportModule": null,
          "ImportTypeName": null,
          "Name": "ADCSCertAuthority",
          "Args": {
            "Name": "ADCS-Cert-Authority",
            "Ensure": "Present",
            "IncludeAllSubFeature": "true",
            "LogPath": "%BrewmasterDir%\\Logs\\Install-ADCSCertAuthority.log"
          },
          "Nodes": [],
          "Requires": [],
          "Description": null
        },
        {
          "Type": "WindowsFeature",
          "ImportModule": null,
          "ImportTypeName": null,
          "Name": "ADCSOnlineCert",
          "Args": {
            "Name": "ADCS-Online-Cert",
            "Ensure": "Present",
            "IncludeAllSubFeature": "true",
            "LogPath": "%BrewmasterDir%\\Logs\\Install-ADCSOnlineCert.log"
          },
          "Nodes": [],
          "Requires": [],
          "Description": null
        },
        {
          "Type": "xAdcsCertificationAuthority",
          "ImportModule": "xAdcsDeployment",
          "ImportTypeName": "MSFT_xAdcsCertificationAuthority",
          "Name": "InitialADCSCert",
          "Args": 
          {
            "Credential": "%%New-Object PSCredential '{{Domain}}\\{{AdminName}}', (ConvertTo-SecureString '{{AdminPassword}}' -AsPlainText -Force)",
            "CAType" : "EnterpriseRootCA",
            "Ensure": "Present"
          },
          "Nodes": [
            "{{CloudService}}{{ServerNamePrefix}}1"
          ],
          "Requires": ["[WindowsFeature]ADCSCertAuthority","[WindowsFeature]ADCSOnlineCert"],
          "Description": null
        }
      ],
      "Args": {}
    }
  ]
}

